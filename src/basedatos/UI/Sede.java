/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basedatos.UI;
import basedatos.Clases.AFPClass;
import basedatos.Clases.EstadoRegistroClass;
import basedatos.Clases.TipoRegimenClass;
import basedatos.Conexion;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
//import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Marie
 */
public class Sede extends javax.swing.JFrame {
    char flag = '_';
    ArrayList<EstadoRegistroClass> estadoRegistro;
    /**
     * Creates new form Sede
     */
    public Sede() {
        initComponents();
        //LIMITE
        codigo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (codigo.getText().length() == 1) {
                    codigo.setBackground(Color.white);
                } else if (codigo.getText().length() >= 2 ) { // limit to 6 characters
                    e.consume();
                } else {
                    codigo.setBackground(new Color(255, 185, 185));
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        inactivar = new javax.swing.JButton();
        reactivar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        descripcion = new javax.swing.JTextField();
        adicionar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        comboBox_EstadoRegistro = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        inactivar.setText("Inactivar");
        inactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inactivarActionPerformed(evt);
            }
        });

        reactivar.setText("Reactivar");
        reactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reactivarActionPerformed(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        jLabel3.setText("Estado de registro:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Estado de registro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Codigo:");

        jLabel2.setText("Descripcion:");

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });

        adicionar.setText("Adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        comboBox_EstadoRegistro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Null" }));
        comboBox_EstadoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_EstadoRegistroActionPerformed(evt);
            }
        });

        jButton1.setText("Modificar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBox_EstadoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(descripcion)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inactivar, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reactivar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboBox_EstadoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adicionar)
                    .addComponent(modificar)
                    .addComponent(eliminar)
                    .addComponent(cancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salir)
                    .addComponent(inactivar)
                    .addComponent(reactivar)
                    .addComponent(actualizar))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        flag = 'c';
        codigo.setText("");
        descripcion.setText("");
        //estado.setText("");
    }//GEN-LAST:event_cancelarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void inactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inactivarActionPerformed
        flag = 'i';
        int row = jTable1.getSelectedRow();
        codigo.setText(jTable1.getValueAt(row, 0) + "");
        codigo.setEditable(false);
        descripcion.setText(jTable1.getValueAt(row, 1) + "");
        descripcion.setEditable(false);
        //estado.setText(jTable1.getValueAt(row, 2) + "");
        //estado.setEditable(false);
    }//GEN-LAST:event_inactivarActionPerformed

    private void reactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reactivarActionPerformed
        flag = 'r';
        int row = jTable1.getSelectedRow();
        codigo.setText(jTable1.getValueAt(row, 0) + "");
        codigo.setEditable(false);
        descripcion.setText(jTable1.getValueAt(row, 1) + "");
        descripcion.setEditable(false);
        //estado.setText(jTable1.getValueAt(row, 2) + "");
        //estado.setEditable(false);
    }//GEN-LAST:event_reactivarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        try {
            PreparedStatement ps = Conexion.obtener().prepareStatement("START TRANSACTION;");
            ps.execute();
        } catch (SQLException ex) {
            Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
        }

        switch(flag)
        {
            case 'm':
            try {
                Statement s = Conexion.obtener().createStatement();
                //PreparedStatement ps = Conexion.obtener().prepareStatement("UPDATE `sede`"
                //    + "SET `SedDes` = '"+ descripcion.getText() +"', `EstReg` = '"+ estado.getText() +"'"
                //    + "WHERE `sede`.`SedCod` = '"+ codigo.getText() +"'; ");
                //ps.execute();
                //ps = Conexion.obtener().prepareStatement("COMMIT;");
                //ps.execute();
            } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 'e':
            try {
                Statement s = Conexion.obtener().createStatement();
                PreparedStatement ps = Conexion.obtener().prepareStatement("UPDATE `sede`"
                    + "SET `EstReg` = '*' "
                    + "WHERE `SedCod`.`SedCod` = '"+ codigo.getText() +"'; ");
                ps.execute();
                ps = Conexion.obtener().prepareStatement("COMMIT;");
                ps.execute();
            } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 'i':
            try {
                Statement s = Conexion.obtener().createStatement();
                PreparedStatement ps = Conexion.obtener().prepareStatement("UPDATE `sede`"
                    + "SET `EstReg` = 'I' "
                    + "WHERE `sede`.`SedCod` = '"+ codigo.getText() +"'; ");
                ps.execute();
                ps = Conexion.obtener().prepareStatement("COMMIT;");
                ps.execute();
            } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 'r':
            try {
                Statement s = Conexion.obtener().createStatement();
                PreparedStatement ps = Conexion.obtener().prepareStatement("UPDATE `sede`"
                    + "SET `EstReg` = 'A'"
                    + "WHERE `sede`.`SedCod` = '"+ codigo.getText() +"'; ");
                ps.execute();
                ps = Conexion.obtener().prepareStatement("COMMIT;");
                ps.execute();
            } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 'a':
            try {
                String seleccionado = "0";
                for (EstadoRegistroClass estadoRegistro : estadoRegistro) {
                    if (estadoRegistro.getEstRegDes().equals(comboBox_EstadoRegistro.getSelectedItem().toString()))
                        seleccionado = estadoRegistro.getEstRegCod();
                }
                Statement s = Conexion.obtener().createStatement();
                PreparedStatement ps = Conexion.obtener().prepareStatement("INSERT INTO `sede` (`SedCod`, `SedDes`, `EstReg`) "
                        + "VALUES ('"+ codigo.getText() +"', '"+ descripcion.getText() +"', '"+ seleccionado +"');");
                ps.execute();
                ps = Conexion.obtener().prepareStatement("COMMIT;");
                ps.execute();
            } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
            default:

        }
        try {
            String sql = "SELECT * FROM sede";
            Statement s = Conexion.obtener().createStatement();
            ResultSet rs = s.executeQuery(sql);
            DefaultTableModel model = new DefaultTableModel(new String[]{"Codigo", "Descripcion", "Estado de registro"}, 0);
            while(rs.next())
            {
                String d = rs.getString("SedCod");
                String e = rs.getString("SedDes");
                String f = rs.getString("EstReg");
                model.addRow(new Object[]{d, e, f });
            }
            jTable1.setModel(model);
            codigo.setText("");
            descripcion.setText("");
            //estado.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
        }

        flag = '_';

    }//GEN-LAST:event_actualizarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoActionPerformed

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        flag = 'a';
        codigo.setText("");
        descripcion.setText("");
        comboBox_EstadoRegistro.setSelectedIndex(0);
        codigo.setEditable(true);
        descripcion.setEditable(true);
    }//GEN-LAST:event_adicionarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        flag = 'm';
        int row = jTable1.getSelectedRow();
        codigo.setText(jTable1.getValueAt(row, 0) + "");
        codigo.setEditable(false);
        descripcion.setText(jTable1.getValueAt(row, 1) + "");
        switch (jTable1.getValueAt(row, 2) + "") {
            case "A": comboBox_EstadoRegistro.setSelectedIndex(0);
            break;
            case "I": comboBox_EstadoRegistro.setSelectedIndex(1);
            break;
            case "*": comboBox_EstadoRegistro.setSelectedIndex(2);
            break;
            default : System.err.println("Error");
        }
        //estado.setEditable(false);
    }//GEN-LAST:event_modificarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        flag = 'e';
        int row = jTable1.getSelectedRow();
        codigo.setText(jTable1.getValueAt(row, 0) + "");
        codigo.setEditable(false);
        descripcion.setText(jTable1.getValueAt(row, 1) + "");
        descripcion.setEditable(false);
        //estado.setText(jTable1.getValueAt(row, 2) + "");
        //estado.setEditable(false);
    }//GEN-LAST:event_eliminarActionPerformed

    private void comboBox_EstadoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_EstadoRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBox_EstadoRegistroActionPerformed

    public void comboBox_EstadoRegistro() {
        try {
            estadoRegistro = new ArrayList<EstadoRegistroClass>();
            String sql = "SELECT * FROM estado_registro";
            Statement s = Conexion.obtener().createStatement();
            ResultSet rs = s.executeQuery(sql);
            while(rs.next())
            {
                if (rs.getString("EstReg").equals("A")) {
                    estadoRegistro.add(new EstadoRegistroClass (rs.getString("EstRegCod"), rs.getString("EstRegDes"),
                            rs.getString("EstReg")));
                }
            }
            String [] arrEstadoRegistro = new String [estadoRegistro.size()];
            for (int i = 0; i < arrEstadoRegistro.length; i++) {
                arrEstadoRegistro[i] = estadoRegistro.get(i).getEstRegDes();
            }
            comboBox_EstadoRegistro.setModel(new javax.swing.DefaultComboBoxModel(arrEstadoRegistro));;
        } catch (SQLException ex) {
        Logger.getLogger(TipoDocumento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
        Logger.getLogger(TipoDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public JTable getJTable () {
        return jTable1;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sede.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Sede sede = new Sede();
                sede.setTitle("Sede");
                try {
                String sql = "SELECT * FROM sede";
                Statement s = Conexion.obtener().createStatement();
                ResultSet rs = s.executeQuery(sql);
                DefaultTableModel model = new DefaultTableModel(new String[]{"Codigo", "Descripcion", "Estado de registro"}, 0);
                while(rs.next())
                {
                    String d = rs.getString("SedCod");
                    String e = rs.getString("SedDes");
                    String f = rs.getString("EstReg");
                    model.addRow(new Object[]{d, e, f });
                }
                sede.jTable1.setModel(model);
                } catch (SQLException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                Logger.getLogger(TipoTrabajador.class.getName()).log(Level.SEVERE, null, ex);
                }
                sede.comboBox_EstadoRegistro();
                sede.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton adicionar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField codigo;
    private javax.swing.JComboBox<String> comboBox_EstadoRegistro;
    private javax.swing.JTextField descripcion;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton inactivar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modificar;
    private javax.swing.JButton reactivar;
    private javax.swing.JButton salir;
    // End of variables declaration//GEN-END:variables
}
